name: 'AWS Edge Static Stack'
description: 'Deploy your static website to the AWS Edge using S3, CloudFront & Lambda@Edge'
author: 'Richard Willis <willis.rh@gmail.com>'
branding:
  icon: 'upload-cloud'
  color: 'gray-dark'
inputs:
  cf-stack-name:
    required: true
    description: 'The name of the Cloudformation stack to be created. For example: example-com-static-cloudformation-stack'
  cf-template:
    required: true
    description: 'The relative path to the CloudFormation stack template. For example: ./cloudformation/s3bucket_with_cloudfront.yml'
  cf-apply-change-set:
    required: true
    description: 'Whether to apply the CloudFormation ChangeSet (if any)'
  token:
    required: true
    description: 'GitHub Token used for commenting on Pull Requests. Use the default GITHUB_TOKEN from secrets.'
  aws-region:
    require: true
    description: 'The AWS region in which to create the stack. You should set this to: us-east-1'
  s3-bucket-name:
    required: true
    description: 'The name of S3 bucket to be created, to store your static files. Must end with region name, for example: example.com-us-east-1'
  s3-allowed-origins:
    required: true
    description: 'A list of allowed domains to request resources from S3. For example: https://example.com,https://*.preview.example.com'
  cloudfront-root-hosts:
    required: true
    description: 'A list of hosts assigned to the Root CloudFront distribution. For example: example.com'
  cloudfront-preview-hosts:
    required: true
    description: 'A list of hosts assigned to the Preview CloudFront distribution. For example: *.preview.example.com'
  cloudfront-default-root-object:
    required: true
    description: 'The CloudFront default root object. For example: index.html'
  certificate-arn:
    required: true
    description: 'ARN of the certificate for the root and preview domains. For example: arn:aws:acm:us-east-1:1234567:certificate/123abc-123abc-1234-5678-abcdef'
  src-dir:
    required: true
    description: 'Path to build/out directory that contains the static files. For example: ./out'
  static-files-glob:
    required: true
    description: 'Glob pattern for immutable static files. For example: _next/**'
  lambda-version:
    required: true
    description: 'The lambda version. Required to deploy a new lambda. You must update this if changing the lambda. For example: 1.0.0'
  delete-preview-site-on-pr-close:
    required: true
    description: 'Whether to delete the preview site on PR close'
  comment-template:
    required: true
    description: 'Path to the Pull Request comment template. For example: .github/preview-site-comment.md'

runs:
  using: 'composite'
  steps:
    - uses: actions/github-script@v5
      name: Set vars
      id: vars
      with:
        script: |
          const isPullRequest = context.eventName === 'pull_request';
          const prBranchName = isPullRequest
            ? context.payload.pull_request.head.ref.replace(/\//g, '-')
            : '';
          const prefix = isPullRequest ? `preview/${prBranchName}` : 'root';
          core.setOutput('preview-branch', prBranchName);
          core.setOutput('prefix', prefix);

    - uses: badsyntax/github-action-aws-cloudformation@v1.0.3
      name: Update CloudFormation Stack
      id: update-stack
      with:
        stack-name: ${{ inputs.cf-stack-name }}
        template: ${{ inputs.cf-template }}
        apply-change-set: ${{ inputs.cf-apply-change-set }}
        aws-region: ${{ inputs.aws-region }}
        parameters: |
          S3BucketName=${{ inputs.s3-bucket-name }}&
          S3AllowedOrigins=${{ inputs.s3-allowed-origins }}&
          CloudFrontRootHosts=${{ inputs.cloudfront-root-hosts }}&
          CloudFrontPreviewHosts=${{ inputs.cloudfront-preview-hosts }}&
          CertificateARN=${{ inputs.certificate-arn }}&
          CloudFrontDefaultRootObject=${{ inputs.cloudfront-default-root-object }}&
          LambdaVersion=${{ inputs.lambda-version }}&
          StackName=${{ inputs.cf-stack-name }}

    - uses: badsyntax/github-action-aws-s3@v0.0.10
      name: Sync mutable HTML files to S3
      id: sync-html-s3
      if: github.event_name != 'pull_request' || github.event.action != 'closed'
      with:
        bucket: ${{ steps.update-stack.outputs.S3BucketName }}
        action: 'sync'
        src-dir: ${{ inputs.src-dir }}
        files-glob: '**/*.html'
        aws-region: ${{ inputs.aws-region }}
        prefix: ${{ steps.vars.outputs.prefix }}
        strip-extension-glob: '**/**.html'
        cache-control: 'public,max-age=0,s-maxage=31536000,must-revalidate'

    - uses: badsyntax/github-action-aws-s3@v0.0.10
      name: Sync immutable files to S3
      id: sync-immutable-s3
      if: github.event_name != 'pull_request' || github.event.action != 'closed'
      with:
        bucket: ${{ steps.update-stack.outputs.S3BucketName }}
        action: 'sync'
        src-dir: ${{ inputs.src-dir }}
        files-glob: ${{ inputs.static-files-glob }}
        aws-region: ${{ inputs.aws-region }}
        prefix: ${{ steps.vars.outputs.prefix }}
        cache-control: 'public,max-age=31536000,immutable'

    - uses: actions/github-script@v5
      name: Set CloudFront Distribution Id
      id: cloudfront-distribution-id
      with:
        script: |
          const distributionId =
            context.eventName === 'pull_request'
              ? '${{ steps.update-stack.outputs.CFDistributionPreviewId }}'
              : '${{ steps.update-stack.outputs.CFDistributionRootId }}';
          core.setOutput('distribution-id', distributionId);

    - uses: badsyntax/github-action-aws-cloudfront@v0.0.3
      name: Invalidate CloudFront Cache
      id: invalidate-cloudfront-cache
      if: github.event_name != 'pull_request' || github.event.action != 'closed'
      with:
        distribution-id: ${{ steps.cloudfront-distribution-id.outputs.distribution-id }}
        aws-region: ${{ inputs.aws-region }}
        origin-prefix: ${{ steps.vars.outputs.prefix }}
        include-origin-prefix: ${{ github.event_name == 'pull_request' }}
        invalidate-paths: ${{ steps.sync-html-s3.outputs.modified-keys }}
        default-root-object: ${{ inputs.cloudfront-default-root-object }}

    - uses: badsyntax/github-action-issue-comment@v0.0.3
      name: Comment on Pull Request
      if: github.event_name == 'pull_request' && github.event.action != 'closed'
      with:
        action: 'create-clean'
        template: ${{ inputs.comment-template }}
        id: deploy
        token: ${{ inputs.token }}
        issue-number: ${{ github.event.pull_request.number }}
        template-inputs: |
          {
            "changes": ${{ steps.update-stack.outputs.changes }},
            "outputs": ${{ steps.update-stack.outputs.outputs }},
            "applyChangeSet": ${{ inputs.cf-apply-change-set }},
            "previewBranch": "${{ steps.vars.outputs.preview-branch }}"
          }

    - uses: badsyntax/github-action-aws-s3@v0.0.10
      name: Delete Preview Files in S3
      id: delete-preview-files
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && inputs.delete-preview-site-on-pr-close == 'true'
      with:
        bucket: ${{ steps.update-stack.outputs.S3BucketName }}
        action: 'clean'
        src-dir: ${{ inputs.src-dir }}
        files-glob: '**/*'
        aws-region: ${{ inputs.aws-region }}
        prefix: ${{ steps.vars.outputs.prefix }}

    - uses: badsyntax/github-action-issue-comment@v0.0.3
      name: Delete comment
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && inputs.delete-preview-site-on-pr-close == 'true'
      with:
        action: 'delete'
        id: deploy
        token: ${{ inputs.token }}
        issue-number: ${{ github.event.pull_request.number }}
